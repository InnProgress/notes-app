{"version":3,"sources":["containers/Header.js","styled_components/StyledButton.js","actions.js","reducers.js","api.js","sagas.js","store.js","containers/NotesList.js","styled_components/InputBlock.js","containers/Form.js","containers/MainView.js","containers/MainGrid.js","styled_components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","header","Header","StyledButton","button","props","small","special","danger","active","mb","loadNotesAsync","type","loadNotes","notes","addNoteAsync","data","payload","addNote","newNote","updateNoteAsync","updateNote","removeNoteAsync","id","removeNote","selectNote","initialState","activeNote","combineReducers","state","action","NotificationManager","success","updatedNoteIndex","findIndex","note","_id","index","slice","length","url","getNotes","axios","get","then","res","insertNote","post","patch","delete","watchLoadNotes","watchAddNote","watchUpdateNote","watchRemoveNote","sagas","takeLatest","api","put","actions","submittedData","takeEvery","updatedData","all","sagaMiddleware","createSagaMiddleware","store","createStore","mainReducer","applyMiddleware","run","dispatch","mapDispatchToProps","bindActionCreators","mapStateToProps","ownProps","find","Menu","div","ListContainer","connect","map","i","onClick","key","title","InputBlock","titleInput","bodyInput","Date","date","toLocaleString","onSubmit","e","preventDefault","value","body","htmlFor","defaultValue","ref","input","required","name","className","Grid","MainGrid","Loader","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91819b3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.header`\r\n    position: relative;\r\n    z-index: 1;\r\n    background-color: black;\r\n    padding: 15px;\r\n    border-bottom: 1px solid white;\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 1.15em;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <h1>Notes</h1>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n    cursor: pointer;\r\n    padding: 9px 0;\r\n    width: ${props => props.small ? '20%' : '100%'};\r\n    background-color: ${props => {\r\n        if (props.special) return '#374'\r\n        else if (props.danger) return '#621'\r\n        else if (props.active) return '#333'\r\n        else return '#111'\r\n    }};\r\n    border: none;\r\n    border-top: 2px solid black;\r\n    border-radius: 3px;\r\n    color: gainsboro; \r\n\r\n    transition: 0.4s ease;\r\n\r\n    ${props => props.mb && `margin-bottom: ${props.mb};`}\r\n\r\n    &:hover {\r\n        background-color: ${props => {\r\n            if (props.special) return '#1f4929'\r\n            else if(props.danger) return '#410'\r\n            else return '#191919'\r\n        }};\r\n    }\r\n`;\r\n\r\nexport default StyledButton;","export const loadNotesAsync = () => ({\r\n    type: 'LOAD_NOTES_ASYNC'\r\n})\r\nexport const loadNotes = notes => ({\r\n    type: 'LOAD_NOTES',\r\n    notes\r\n})\r\n\r\nexport const addNoteAsync = data => ({\r\n    type: 'ADD_NOTE_ASYNC',\r\n    payload: data\r\n})\r\nexport const addNote = data => ({\r\n    type: 'ADD_NOTE',\r\n    newNote: data\r\n})\r\n\r\nexport const updateNoteAsync = data => ({\r\n    type: 'UPDATE_NOTE_ASYNC',\r\n    payload: data\r\n})\r\nexport const updateNote = data => ({\r\n    type: 'UPDATE_NOTE',\r\n    payload: data\r\n})\r\n\r\nexport const removeNoteAsync = id => ({\r\n    type: 'REMOVE_NOTE_ASYNC',\r\n    id\r\n})\r\nexport const removeNote = id => ({\r\n    type: 'REMOVE_NOTE',\r\n    id\r\n})\r\n\r\nexport const selectNote = id => ({\r\n    type: 'SET_ACTIVE_NOTE',\r\n    id\r\n})","import { combineReducers } from 'redux';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    activeNote: false\r\n};\r\n\r\nconst notesCrudReducer = (state = initialState.notes, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_NOTES': {\r\n            return action.notes;\r\n        }\r\n        case 'ADD_NOTE': {\r\n            NotificationManager.success('Success', 'Note created');\r\n            return [action.newNote, ...state]\r\n        }\r\n        case 'UPDATE_NOTE': {\r\n            const notes = [...state];\r\n            const updatedNoteIndex = notes.findIndex(note => note._id === action.payload._id);\r\n            notes[updatedNoteIndex] = action.payload;\r\n            NotificationManager.success('Success', 'Note updated');\r\n            return notes;\r\n        }\r\n        case 'REMOVE_NOTE': {\r\n            const notes = [...state];\r\n            const index = state.findIndex(note => note._id === action.id);\r\n            NotificationManager.success('Success', 'Note removed');\r\n            return [...notes.slice(0, index), ...notes.slice(index + 1, notes.length)];\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nconst notesActiveReducer = (state = initialState.activeNote, action) => {\r\n    if(action.type === 'SET_ACTIVE_NOTE') {\r\n        return action.id;\r\n    } else if(action.type === 'LOAD_NOTES') {\r\n        return null;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default combineReducers({\r\n    notes: notesCrudReducer,\r\n    activeNote: notesActiveReducer\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://notes-rest-api-node.herokuapp.com\";\r\n\r\nexport const getNotes = () => {\r\n    return axios.get(url)\r\n        .then(res => res.data);\r\n};\r\n\r\nexport const insertNote = payload => {\r\n    return axios.post(url, payload)\r\n        .then(res => res.data);\r\n}\r\n\r\nexport const updateNote = payload => {\r\n    return axios.patch(`${url}/note/${payload._id}`, payload)\r\n        .then(res => res.data);\r\n}\r\n\r\nexport const removeNote = id => {\r\n    return axios.delete(`${url}/note/${id}`)\r\n        .then(res => res.data);\r\n}","import { put, takeLatest, takeEvery, all } from 'redux-saga/effects';\r\nimport * as api from './api';\r\n\r\nimport * as actions from './actions';\r\n\r\nfunction* watchLoadNotes() {\r\n    yield takeLatest('LOAD_NOTES_ASYNC', loadNotes);\r\n}\r\nfunction* loadNotes() {\r\n    const notes = yield api.getNotes();\r\n    yield put(actions.loadNotes(notes));\r\n}\r\n\r\nfunction* watchAddNote() {\r\n    yield takeLatest('ADD_NOTE_ASYNC', addNote);\r\n}\r\nfunction* addNote({ payload }) {\r\n    const submittedData = yield api.insertNote(payload);\r\n    yield put(actions.addNote(submittedData));\r\n    yield put(actions.selectNote(submittedData._id));\r\n}\r\n\r\nfunction* watchUpdateNote() {\r\n    yield takeEvery('UPDATE_NOTE_ASYNC', updateNote);\r\n}\r\nfunction* updateNote({ payload }) {\r\n    const updatedData = yield api.updateNote(payload);\r\n    yield put(actions.updateNote(updatedData));\r\n}\r\n\r\nfunction* watchRemoveNote() {\r\n    yield takeLatest('REMOVE_NOTE_ASYNC', removeNote);\r\n}\r\nfunction* removeNote({ id }) {\r\n    yield api.removeNote(id);\r\n    yield put(actions.removeNote(id));\r\n    yield put(actions.selectNote(null));\r\n}\r\n\r\nexport default function* sagas() {\r\n    yield all([\r\n        watchLoadNotes(),\r\n        watchAddNote(),\r\n        watchUpdateNote(),\r\n        watchRemoveNote()\r\n    ]);\r\n}","import { createStore, bindActionCreators, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport * as actions from './actions';\r\nimport mainReducer from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    mainReducer,\r\n    applyMiddleware(sagaMiddleware)\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nsagaMiddleware.run(sagas);\r\n\r\nstore.dispatch(actions.loadNotesAsync());\r\n\r\nexport default store;\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators({ ...actions }, dispatch)\r\n    }\r\n};\r\n\r\nexport const mapStateToProps = (state, ownProps) => {\r\n    if(ownProps.id && ownProps.id !== true) {\r\n        return { note: state.notes.find(note => note._id === state.activeNote) };\r\n    }\r\n    return state;\r\n};","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nimport StyledButton from '../styled_components/StyledButton';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { mapDispatchToProps, mapStateToProps } from '../store';\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n\r\n  background-color: black;\r\n  border-right: 1px solid black;\r\n  height: 92vh;\r\n\r\n  transition: 0.4s ease-in-out;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    box-shadow: 0 30px 100px black;\r\n  }\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst NotesList = props => {\r\n    return (\r\n        <Menu>\r\n          <ListContainer>\r\n            {props.notes.map((note, i) => \r\n              <StyledButton onClick={() => props.selectNote(note._id)} active={note._id === props.activeNote} key={i}>{note.title.length > 20 ? note.title.slice(0, 20) + '...' : note.title}</StyledButton>\r\n            )}\r\n          </ListContainer>\r\n\r\n          <StyledButton special mb=\"3px\" onClick={() => props.selectNote(true)}>New note</StyledButton>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesList);","import styled from 'styled-components';\r\n\r\nconst InputBlock = styled.div`\r\n    margin-bottom: 10px;\r\n\r\n    overflow: hidden;\r\n\r\n    label {\r\n        display: block;\r\n        margin-bottom: 7px;\r\n    }\r\n    input, textarea {\r\n        padding: 7px;\r\n        border: 1px solid #333;\r\n        background-color: #111;\r\n        width: 100%;\r\n        color: whitesmoke;\r\n        &:focus {\r\n            border-color: #374;\r\n        }\r\n    }\r\n    textarea {\r\n        min-height: 25px;\r\n        height: 200px;\r\n        resize: vertical;\r\n    }\r\n`;\r\n\r\nexport default InputBlock;","import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from '../store';\r\n\r\nimport InputBlock from '../styled_components/InputBlock';\r\nimport StyledButton from '../styled_components/StyledButton';\r\n\r\nconst Form = ({ note, addNoteAsync, updateNoteAsync, removeNoteAsync }) => {\r\n\r\n    let titleInput, bodyInput;\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if(!note) {\r\n            addNoteAsync({\r\n                title: titleInput.value,\r\n                body: bodyInput.value\r\n            });\r\n        } else {\r\n            updateNoteAsync({\r\n                _id: note._id,\r\n                title: titleInput.value,\r\n                body: bodyInput.value\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div key={note && note._id}>\r\n            {note && \r\n                <p>Created at: {new Date(note.date).toLocaleString('lt-LT')}</p>\r\n            }\r\n            \r\n            <form onSubmit={onSubmit}>\r\n                <InputBlock>\r\n                    <label htmlFor=\"title\">Title:</label> \r\n                    <input type = \"text\"\r\n                    defaultValue = {\r\n                        note && note.title\r\n                    }\r\n                    ref={input => titleInput = input}\r\n                    required />\r\n                </InputBlock>\r\n\r\n                <InputBlock>\r\n                    <label htmlFor=\"body\">Body:</label>\r\n                    <textarea name = \"body\"\r\n                    defaultValue = {\r\n                        note && note.body\r\n                    }\r\n                    ref={input => bodyInput = input}\r\n                    required></textarea>\r\n                </InputBlock>\r\n\r\n                <InputBlock>\r\n                    <StyledButton special small>{note ? 'Update' : 'Create'}</StyledButton>\r\n                </InputBlock>\r\n            </form>\r\n\r\n            {note && <StyledButton onClick={() => removeNoteAsync(note._id)} danger small>Delete</StyledButton>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mapStateToProps } from '../store';\r\nimport Form from './Form';\r\n\r\nconst MainView = ({ activeNote }) => {\r\n    return (\r\n        <div className=\"main\">\r\n            {activeNote ? <Form id={activeNote} /> : \r\n                <div>\r\n                    <h2>You should select a note or create new one</h2>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainView)\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nimport NotesList from './NotesList';\r\nimport MainView from './MainView';\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n`;\r\n\r\nconst MainGrid = () => {\r\n    return (\r\n        <Grid>\r\n            <NotesList />\r\n            <MainView />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MainGrid\r\n","import styled from 'styled-components';\r\n\r\nconst Loader = styled.div`\r\n    border: 16px solid #f3f3f3;\r\n    border-radius: 50%;\r\n    border-top: 16px solid #3498db;\r\n    width: 120px;\r\n    height: 120px;\r\n    -webkit-animation: spin 2s linear infinite; /* Safari */\r\n    animation: spin 2s linear infinite;\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n\r\n    @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n`;\r\n\r\nexport default Loader;","import React from 'react';\nimport './App.scss';\n\nimport 'react-notifications/lib/notifications.css';\nimport {\n  NotificationContainer\n} from 'react-notifications';\n\nimport { connect } from 'react-redux';\n\nimport Header from './containers/Header';\nimport MainGrid from './containers/MainGrid';\n\nimport Loader from './styled_components/Loader';\nimport { mapStateToProps } from './store';\n\nconst App = ({ activeNote }) => {\n  return (\n    <div>\n      <Header />\n      <MainGrid />\n\n      <NotificationContainer/>\n\n      {activeNote === false && <Loader />}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}